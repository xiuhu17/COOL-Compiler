declare i32 @strcmp(i8*, i8*)
declare i32 @printf(i8*, ...)
declare void @abort()
declare i8* @malloc(i32)
declare %Object* @Object_new()
declare %Object* @Object_abort(%Object*)
declare %String* @Object_type_name(%Object*)
declare %Object* @Object_copy(%Object*)
declare %IO* @IO_new()
declare %IO* @IO_out_string(%IO*, %String*)
declare %IO* @IO_out_int(%IO*, i32)
declare %String* @IO_in_string(%IO*)
declare i32 @IO_in_int(%IO*)
declare %String* @String_new()
declare i32 @String_length(%String*)
declare %String* @String_concat(%String*, %String*)
declare %String* @String_substr(%String*, i32, i32)
declare %Int* @Int_new()
declare void @Int_init(%Int*, i32)
declare %Bool* @Bool_new()
declare void @Bool_init(%Bool*, i1)
@str.Object = internal constant [7 x i8] c"Object\00"
%Object = type {
	%_Object_vtable*
}

%_Object_vtable = type {
	i32,
	i32,
	i8*,
	%Object* () *,
	%Object* (%Object*) *,
	%String* (%Object*) *,
	%Object* (%Object*) *
}

@_Object_vtable_prototype = constant %_Object_vtable {
	i32 0,
	i32 ptrtoint (%Object* getelementptr (%Object, %Object* null, i32 1) to i32),
	i8* getelementptr ([7 x i8], [7 x i8]* @str.Object, i32 0, i32 0),
	%Object* () * @Object_new,
	%Object* (%Object*) * @Object_abort,
	%String* (%Object*) * @Object_type_name,
	%Object* (%Object*) * @Object_copy
}

@str.Int = internal constant [4 x i8] c"Int\00"
%Int = type {
	%_Int_vtable*,
	i32
}

%_Int_vtable = type {
	i32,
	i32,
	i8*,
	%Int* () *,
	%Object* (%Int*) *,
	%String* (%Int*) *,
	%Int* (%Int*) *
}

@_Int_vtable_prototype = constant %_Int_vtable {
	i32 1,
	i32 ptrtoint (%Int* getelementptr (%Int, %Int* null, i32 1) to i32),
	i8* getelementptr ([4 x i8], [4 x i8]* @str.Int, i32 0, i32 0),
	%Int* () * @Int_new,
	%Object* (%Int*) * bitcast (%Object* (%Object*) * @Object_abort to %Object* (%Int*) *),
	%String* (%Int*) * bitcast (%String* (%Object*) * @Object_type_name to %String* (%Int*) *),
	%Int* (%Int*) * bitcast (%Object* (%Object*) * @Object_copy to %Int* (%Int*) *)
}

@str.Bool = internal constant [5 x i8] c"Bool\00"
%Bool = type {
	%_Bool_vtable*,
	i1
}

%_Bool_vtable = type {
	i32,
	i32,
	i8*,
	%Bool* () *,
	%Object* (%Bool*) *,
	%String* (%Bool*) *,
	%Bool* (%Bool*) *
}

@_Bool_vtable_prototype = constant %_Bool_vtable {
	i32 2,
	i32 ptrtoint (%Bool* getelementptr (%Bool, %Bool* null, i32 1) to i32),
	i8* getelementptr ([5 x i8], [5 x i8]* @str.Bool, i32 0, i32 0),
	%Bool* () * @Bool_new,
	%Object* (%Bool*) * bitcast (%Object* (%Object*) * @Object_abort to %Object* (%Bool*) *),
	%String* (%Bool*) * bitcast (%String* (%Object*) * @Object_type_name to %String* (%Bool*) *),
	%Bool* (%Bool*) * bitcast (%Object* (%Object*) * @Object_copy to %Bool* (%Bool*) *)
}

@str.String = internal constant [7 x i8] c"String\00"
%String = type {
	%_String_vtable*,
	i8*
}

%_String_vtable = type {
	i32,
	i32,
	i8*,
	%String* () *,
	%Object* (%String*) *,
	%String* (%String*) *,
	%String* (%String*) *,
	i32 (%String*) *,
	%String* (%String*,%String*) *,
	%String* (%String*,i32,i32) *
}

@_String_vtable_prototype = constant %_String_vtable {
	i32 3,
	i32 ptrtoint (%String* getelementptr (%String, %String* null, i32 1) to i32),
	i8* getelementptr ([7 x i8], [7 x i8]* @str.String, i32 0, i32 0),
	%String* () * @String_new,
	%Object* (%String*) * bitcast (%Object* (%Object*) * @Object_abort to %Object* (%String*) *),
	%String* (%String*) * bitcast (%String* (%Object*) * @Object_type_name to %String* (%String*) *),
	%String* (%String*) * bitcast (%Object* (%Object*) * @Object_copy to %String* (%String*) *),
	i32 (%String*) * @String_length,
	%String* (%String*,%String*) * @String_concat,
	%String* (%String*,i32,i32) * @String_substr
}

@str.IO = internal constant [3 x i8] c"IO\00"
%IO = type {
	%_IO_vtable*
}

%_IO_vtable = type {
	i32,
	i32,
	i8*,
	%IO* () *,
	%Object* (%IO*) *,
	%String* (%IO*) *,
	%IO* (%IO*) *,
	%IO* (%IO*,%String*) *,
	%IO* (%IO*,i32) *,
	%String* (%IO*) *,
	i32 (%IO*) *
}

@_IO_vtable_prototype = constant %_IO_vtable {
	i32 4,
	i32 ptrtoint (%IO* getelementptr (%IO, %IO* null, i32 1) to i32),
	i8* getelementptr ([3 x i8], [3 x i8]* @str.IO, i32 0, i32 0),
	%IO* () * @IO_new,
	%Object* (%IO*) * bitcast (%Object* (%Object*) * @Object_abort to %Object* (%IO*) *),
	%String* (%IO*) * bitcast (%String* (%Object*) * @Object_type_name to %String* (%IO*) *),
	%IO* (%IO*) * bitcast (%Object* (%Object*) * @Object_copy to %IO* (%IO*) *),
	%IO* (%IO*,%String*) * @IO_out_string,
	%IO* (%IO*,i32) * @IO_out_int,
	%String* (%IO*) * @IO_in_string,
	i32 (%IO*) * @IO_in_int
}

@str.B = internal constant [2 x i8] c"B\00"
%B = type {
	%_B_vtable*,
	%String*,
	i32
}

%_B_vtable = type {
	i32,
	i32,
	i8*,
	%B* () *,
	%Object* (%B*) *,
	%String* (%B*) *,
	%B* (%B*) *,
	%String* (%B*) *,
	i32 (%B*,i1,i32) *,
	i32 (%B*,i1,i32) *,
	i32 (%B*,i1,i32) *
}

@_B_vtable_prototype = constant %_B_vtable {
	i32 5,
	i32 ptrtoint (%B* getelementptr (%B, %B* null, i32 1) to i32),
	i8* getelementptr ([2 x i8], [2 x i8]* @str.B, i32 0, i32 0),
	%B* () * @B_new,
	%Object* (%B*) * bitcast (%Object* (%Object*) * @Object_abort to %Object* (%B*) *),
	%String* (%B*) * bitcast (%String* (%Object*) * @Object_type_name to %String* (%B*) *),
	%B* (%B*) * bitcast (%Object* (%Object*) * @Object_copy to %B* (%B*) *),
	%String* (%B*) * @B.main,
	i32 (%B*,i1,i32) * @B.test1,
	i32 (%B*,i1,i32) * @B.test2,
	i32 (%B*,i1,i32) * @B.test3
}

@str.C = internal constant [2 x i8] c"C\00"
%C = type {
	%_C_vtable*,
	%String*,
	i32,
	%Object*
}

%_C_vtable = type {
	i32,
	i32,
	i8*,
	%C* () *,
	%Object* (%C*) *,
	%String* (%C*) *,
	%C* (%C*) *,
	%String* (%C*) *,
	i32 (%C*,i1,i32) *,
	i32 (%C*,i1,i32) *,
	i32 (%C*,i1,i32) *,
	%Object* (%C*,%Object*) *
}

@_C_vtable_prototype = constant %_C_vtable {
	i32 6,
	i32 ptrtoint (%C* getelementptr (%C, %C* null, i32 1) to i32),
	i8* getelementptr ([2 x i8], [2 x i8]* @str.C, i32 0, i32 0),
	%C* () * @C_new,
	%Object* (%C*) * bitcast (%Object* (%Object*) * @Object_abort to %Object* (%C*) *),
	%String* (%C*) * bitcast (%String* (%Object*) * @Object_type_name to %String* (%C*) *),
	%C* (%C*) * bitcast (%Object* (%Object*) * @Object_copy to %C* (%C*) *),
	%String* (%C*) * bitcast (%String* (%B*) * @B.main to %String* (%C*) *),
	i32 (%C*,i1,i32) * bitcast (i32 (%B*,i1,i32) * @B.test1 to i32 (%C*,i1,i32) *),
	i32 (%C*,i1,i32) * bitcast (i32 (%B*,i1,i32) * @B.test2 to i32 (%C*,i1,i32) *),
	i32 (%C*,i1,i32) * bitcast (i32 (%B*,i1,i32) * @B.test3 to i32 (%C*,i1,i32) *),
	%Object* (%C*,%Object*) * @C.s
}

@str.Main = internal constant [5 x i8] c"Main\00"
%Main = type {
	%_Main_vtable*,
	%C*
}

%_Main_vtable = type {
	i32,
	i32,
	i8*,
	%Main* () *,
	%Object* (%Main*) *,
	%String* (%Main*) *,
	%Main* (%Main*) *,
	i32 (%Main*) *
}

@_Main_vtable_prototype = constant %_Main_vtable {
	i32 7,
	i32 ptrtoint (%Main* getelementptr (%Main, %Main* null, i32 1) to i32),
	i8* getelementptr ([5 x i8], [5 x i8]* @str.Main, i32 0, i32 0),
	%Main* () * @Main_new,
	%Object* (%Main*) * bitcast (%Object* (%Object*) * @Object_abort to %Object* (%Main*) *),
	%String* (%Main*) * bitcast (%String* (%Object*) * @Object_type_name to %String* (%Main*) *),
	%Main* (%Main*) * bitcast (%Object* (%Object*) * @Object_copy to %Main* (%Main*) *),
	i32 (%Main*) * @Main.main
}

@str.1 = internal constant [14 x i8] c"<basic class>\00"
@String.1 = constant %String {
	%_String_vtable* @_String_vtable_prototype,
	i8* getelementptr ([14 x i8], [14 x i8]* @str.1, i32 0, i32 0)
}

@str.0 = internal constant [5 x i8] c"s.cl\00"
@String.0 = constant %String {
	%_String_vtable* @_String_vtable_prototype,
	i8* getelementptr ([5 x i8], [5 x i8]* @str.0, i32 0, i32 0)
}

define i32 @main() {
entry:
	%main.obj = call %Main*() @Main_new( )
	%main.retval = call i32(%Main*) @Main.main( %Main* %main.obj )
	ret i32 0
}

define %String* @B.main(%B* %self) {

entry:
	%tmp.1 = alloca i32
	%tmp.2 = alloca i32
	%tmp.3 = alloca %Object*
	%tmp.4 = alloca %Object*
	%tmp.0 = alloca %B*
	store %B* %self, %B** %tmp.0
	store i32 1, i32* %tmp.1
	%tmp.5 = load i32, i32* %tmp.1
	%tmp.7 = call %Int* @Int_new(  )
	call void(%Int*, i32 ) @Int_init( %Int* %tmp.7, i32 %tmp.5 )
	%tmp.8 = getelementptr %Int, %Int* %tmp.7, i32 0, i32 0
	%tmp.9 = load %_Int_vtable*, %_Int_vtable** %tmp.8
	%tmp.10 = getelementptr %_Int_vtable, %_Int_vtable* %tmp.9, i32 0, i32 5
	%tmp.11 = load %String* (%Int*) *, %String* (%Int*) ** %tmp.10
	%tmp.12 = call %String*(%Int* ) %tmp.11( %Int* %tmp.7 )
	store i32 0, i32* %tmp.2
	%tmp.13 = load i32, i32* %tmp.2
	%tmp.15 = call %Int* @Int_new(  )
	call void(%Int*, i32 ) @Int_init( %Int* %tmp.15, i32 %tmp.13 )
	%tmp.16 = getelementptr %Int, %Int* %tmp.15, i32 0, i32 0
	%tmp.17 = load %_Int_vtable*, %_Int_vtable** %tmp.16
	%tmp.18 = getelementptr %_Int_vtable, %_Int_vtable* %tmp.17, i32 0, i32 5
	%tmp.19 = load %String* (%Int*) *, %String* (%Int*) ** %tmp.18
	%tmp.20 = call %String*(%Int* ) %tmp.19( %Int* %tmp.15 )
	store %Object* null, %Object** %tmp.3
	%tmp.21 = call %Object* @Object_new(  )
	store %Object* %tmp.21, %Object** %tmp.4
	%tmp.22 = load %Object*, %Object** %tmp.4
	%tmp.23 = icmp eq %Object* %tmp.22, null
	br i1 %tmp.23, label %abort, label %ok.2

ok.2:
	%tmp.24 = getelementptr %Object, %Object* %tmp.22, i32 0, i32 0
	%tmp.25 = load %_Object_vtable*, %_Object_vtable** %tmp.24
	%tmp.26 = getelementptr %_Object_vtable, %_Object_vtable* %tmp.25, i32 0, i32 5
	%tmp.27 = load %String* (%Object*) *, %String* (%Object*) ** %tmp.26
	%tmp.28 = call %String*(%Object* ) %tmp.27( %Object* %tmp.22 )
	ret %String* %tmp.28

abort:
	call void @abort(  )
	unreachable
}

define i32 @B.test1(%B* %self, i1 %aa, i32 %kk) {

entry:
	%tmp.29 = alloca %B*
	%tmp.30 = alloca i1
	%tmp.31 = alloca i32
	store %B* %self, %B** %tmp.29
	store i1 %aa, i1* %tmp.30
	store i32 %kk, i32* %tmp.31
	ret i32 0

abort:
	call void @abort(  )
	unreachable
}

define i32 @B.test2(%B* %self, i1 %aa, i32 %kk) {

entry:
	%tmp.32 = alloca %B*
	%tmp.33 = alloca i1
	%tmp.34 = alloca i32
	store %B* %self, %B** %tmp.32
	store i1 %aa, i1* %tmp.33
	store i32 %kk, i32* %tmp.34
	ret i32 0

abort:
	call void @abort(  )
	unreachable
}

define i32 @B.test3(%B* %self, i1 %aa, i32 %kk) {

entry:
	%tmp.35 = alloca %B*
	%tmp.36 = alloca i1
	%tmp.37 = alloca i32
	store %B* %self, %B** %tmp.35
	store i1 %aa, i1* %tmp.36
	store i32 %kk, i32* %tmp.37
	ret i32 0

abort:
	call void @abort(  )
	unreachable
}

define %B* @B_new() {

entry:
	%tmp.38 = alloca %B*
	%tmp.39 = getelementptr %_B_vtable, %_B_vtable* @_B_vtable_prototype, i32 0, i32 1
	%tmp.40 = load i32, i32* %tmp.39
	%tmp.41 = call i8*(i32 ) @malloc( i32 %tmp.40 )
	%tmp.42 = bitcast i8* %tmp.41 to %B*
	%malloc.null = icmp eq %B* %tmp.42, null
	br i1 %malloc.null, label %abort, label %okay

okay:
	%tmp.43 = getelementptr %B, %B* %tmp.42, i32 0, i32 0
	store %_B_vtable* @_B_vtable_prototype, %_B_vtable** %tmp.43
	store %B* %tmp.42, %B** %tmp.38
	%tmp.44 = getelementptr %B, %B* %tmp.42, i32 0, i32 1
	%tmp.45 = call %String* @String_new(  )
	store %String* %tmp.45, %String** %tmp.44
	%tmp.46 = getelementptr %B, %B* %tmp.42, i32 0, i32 2
	store i32 0, i32* %tmp.46
	%tmp.47 = getelementptr %B, %B* %tmp.42, i32 0, i32 1
	%tmp.48 = call %String* @String_new(  )
	store %String* %tmp.48, %String** %tmp.47
	%tmp.49 = getelementptr %B, %B* %tmp.42, i32 0, i32 2
	store i32 0, i32* %tmp.49
	ret %B* %tmp.42

abort:
	call void @abort(  )
	unreachable
}

define %Object* @C.s(%C* %self, %Object* %aaa) {

entry:
	%tmp.0 = alloca %C*
	%tmp.1 = alloca %Object*
	store %C* %self, %C** %tmp.0
	store %Object* %aaa, %Object** %tmp.1
	%tmp.3 = call %Int* @Int_new(  )
	call void(%Int*, i32 ) @Int_init( %Int* %tmp.3, i32 0 )
	%tmp.4 = bitcast %Int* %tmp.3 to %Object*
	ret %Object* %tmp.4

abort:
	call void @abort(  )
	unreachable
}

define %C* @C_new() {

entry:
	%tmp.5 = alloca %C*
	%tmp.6 = getelementptr %_C_vtable, %_C_vtable* @_C_vtable_prototype, i32 0, i32 1
	%tmp.7 = load i32, i32* %tmp.6
	%tmp.8 = call i8*(i32 ) @malloc( i32 %tmp.7 )
	%tmp.9 = bitcast i8* %tmp.8 to %C*
	%malloc.null = icmp eq %C* %tmp.9, null
	br i1 %malloc.null, label %abort, label %okay

okay:
	%tmp.10 = getelementptr %C, %C* %tmp.9, i32 0, i32 0
	store %_C_vtable* @_C_vtable_prototype, %_C_vtable** %tmp.10
	store %C* %tmp.9, %C** %tmp.5
	%tmp.11 = getelementptr %C, %C* %tmp.9, i32 0, i32 1
	%tmp.12 = call %String* @String_new(  )
	store %String* %tmp.12, %String** %tmp.11
	%tmp.13 = getelementptr %C, %C* %tmp.9, i32 0, i32 2
	store i32 0, i32* %tmp.13
	%tmp.14 = getelementptr %C, %C* %tmp.9, i32 0, i32 3
	store %Object* null, %Object** %tmp.14
	%tmp.15 = getelementptr %C, %C* %tmp.9, i32 0, i32 1
	%tmp.16 = call %String* @String_new(  )
	store %String* %tmp.16, %String** %tmp.15
	%tmp.17 = getelementptr %C, %C* %tmp.9, i32 0, i32 2
	store i32 0, i32* %tmp.17
	%tmp.18 = getelementptr %C, %C* %tmp.9, i32 0, i32 3
	store %Object* null, %Object** %tmp.18
	ret %C* %tmp.9

abort:
	call void @abort(  )
	unreachable
}

define i32 @Main.main(%Main* %self) {

entry:
	%tmp.1 = alloca i32
	%tmp.2 = alloca %C*
	%tmp.3 = alloca %C*
	%tmp.4 = alloca %C*
	%tmp.0 = alloca %Main*
	store %Main* %self, %Main** %tmp.0
	store i32 0, i32* %tmp.1
	store i32 3, i32* %tmp.1
	store %C* null, %C** %tmp.2
	%tmp.5 = call %C* @C_new(  )
	store %C* %tmp.5, %C** %tmp.2
	store %C* null, %C** %tmp.3
	%tmp.6 = load %Main*, %Main** %tmp.0
	%tmp.7 = getelementptr %Main, %Main* %tmp.6, i32 0, i32 1
	%tmp.8 = load %C*, %C** %tmp.7
	store %C* %tmp.8, %C** %tmp.3
	store %C* null, %C** %tmp.4
	%tmp.9 = load %C*, %C** %tmp.4
	%tmp.10 = icmp eq %C* %tmp.9, null
	br i1 %tmp.10, label %abort, label %ok.0

ok.0:
	%tmp.11 = getelementptr %C, %C* %tmp.9, i32 0, i32 0
	%tmp.12 = load %_C_vtable*, %_C_vtable** %tmp.11
	%tmp.13 = getelementptr %_C_vtable, %_C_vtable* %tmp.12, i32 0, i32 9
	%tmp.14 = load i32 (%C*,i1,i32) *, i32 (%C*,i1,i32) ** %tmp.13
	%tmp.15 = call i32(%C*, i1, i32 ) %tmp.14( %C* %tmp.9, i1 false, i32 0 )
	ret i32 0

abort:
	call void @abort(  )
	unreachable
}

define %Main* @Main_new() {

entry:
	%tmp.16 = alloca %Main*
	%tmp.17 = getelementptr %_Main_vtable, %_Main_vtable* @_Main_vtable_prototype, i32 0, i32 1
	%tmp.18 = load i32, i32* %tmp.17
	%tmp.19 = call i8*(i32 ) @malloc( i32 %tmp.18 )
	%tmp.20 = bitcast i8* %tmp.19 to %Main*
	%malloc.null = icmp eq %Main* %tmp.20, null
	br i1 %malloc.null, label %abort, label %okay

okay:
	%tmp.21 = getelementptr %Main, %Main* %tmp.20, i32 0, i32 0
	store %_Main_vtable* @_Main_vtable_prototype, %_Main_vtable** %tmp.21
	store %Main* %tmp.20, %Main** %tmp.16
	%tmp.22 = getelementptr %Main, %Main* %tmp.20, i32 0, i32 1
	store %C* null, %C** %tmp.22
	%tmp.23 = getelementptr %Main, %Main* %tmp.20, i32 0, i32 1
	store %C* null, %C** %tmp.23
	ret %Main* %tmp.20

abort:
	call void @abort(  )
	unreachable
}

