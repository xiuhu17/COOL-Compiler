class A {
  foo () : String {
    -- let expression without initialization
    let x : String in "a string"
  };

  bar () : Bool {
    -- let expression with initialization
    let y : Bool <- true in y
  };
};

class B {
  foo () : String {
    -- let expression without initialization
    let x : String in "a string"

  };

  bar () : Bool {
    -- let expression with initialization
    let y : Bool <- true in y
  };
};

class B {
  foo () : String {
    -- let expression without initialization
    let x : String in "a string"


  };

  bar () : Bool {
    -- let expression with initialization
    let y : Bool <- true in y
  };
};



class C {
  foo () : String {
    -- let expression without initialization
    let x : String <- "ini" in "a string"

  };

  bar () : Bool {
    -- let expression with initialization
    let y : Bool <- true in y
  };
};


class D {
  foo () : String {
    -- let expression without initialization
    let x : String <- "ini" in "a string"


    + "test"

  };

  bar () : Bool {
    -- let expression with initialization
    let y : Bool <- true in y
  };
};